package com.project.sqlquerytool.controller;

import com.project.sqlquerytool.model.SavedQuery;
import com.project.sqlquerytool.repository.SavedQueryRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api")
public class SavedQueryController {

    @Autowired
    private SavedQueryRepository repository;

    @PostMapping("/saveQuery")
    public ResponseEntity<?> saveQuery(@RequestBody Map<String, String> request) {
        String pageName = request.get("pageName");
        String query = request.get("query");

        if (pageName == null || query == null || pageName.isBlank() || query.isBlank()) {
            return ResponseEntity.badRequest().body("Page name and query are required.");
        }

        if (!query.trim().toLowerCase().startsWith("select")) {
            return ResponseEntity.badRequest().body("Only SELECT queries can be saved.");
        }

        SavedQuery sq = new SavedQuery();
        sq.setPageName(pageName);
        sq.setQuery(query);
        repository.save(sq);

        return ResponseEntity.ok("âœ… Query saved successfully!");
    }

    // List all saved pages
    @GetMapping("/pages")
    public ResponseEntity<List<SavedQuery>> getAllPages() {
        List<SavedQuery> pages = repository.findAll(Sort.by(Sort.Direction.DESC, "createdDate"));
        return ResponseEntity.ok(pages);
    }

    
}
